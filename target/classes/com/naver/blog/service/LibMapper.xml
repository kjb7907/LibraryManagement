<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.naver.blog.LibMapper">

	<!-- 지점등록 -->
	<insert id="libadd" parameterType="com.naver.blog.valueObject.Lib">
		INSERT INTO
			LIB(
				lib.LIBNAME,
				lib.LIBLOCATION
				)
		VALUE(
			#{libName},
			#{libLocation}
			)
	</insert>

	<!-- 폐기등록 -->
	<insert id="bookdisinsert" parameterType="int">
		INSERT INTO
			discardbooks(
				BOOKCODE,
				DISCARDREASON
			)
		VALUES(
		#{bookCode},
		'파손'
		);
	</insert>

	<!-- 폐기도서 대여 불가능상태로 변경 -->
	<update id="bookdis" parameterType="int">
		UPDATE 
			books
		SET 
			books.CURRENTSTATUS='대여불가능' 
		WHERE 
			books.BOOKCODE=#{bookCode}; 
	</update>

	<!-- 하나의 도서관 정보 조회 -->
	<select id="selectOneLib" resultType="com.naver.blog.valueObject.Lib" parameterType="int">
		SELECT
			LIBCODE,
			LIBNAME,
			LIBLOCATION
		FROM lib
		WHERE
			libcode=#{libCode};
	</select>

	<!-- 검색조건에 맞는 도서 조회 -->
	<select id="selectSearchBook" resultType="com.naver.blog.valueObject.Book" parameterType="com.naver.blog.valueObject.SearchVO">
		SELECT
			books.BOOKNAME AS bookName,
			books.LIBCODE AS libCode,
			books.WRITER AS writer,
			books.PUBLISHER AS publisher,
			books.CATEGORY AS category,
			books.GENRE AS genre,
			books.BOOKLOCATION AS bookLocation,
			books.CURRENTSTATUS AS currentStatus,
			books.RENTALCOUNT AS rentalCount,
			books.RENTALDAYS As rentalDays
		from 
			books
		WHERE 
			books.${searchOption} 
		LIKE
			'%${searchValue}%';
	</select>
	
	<!-- 하나의 도서정보 조회 -->
	<select id="selectOneBook" resultType="com.naver.blog.valueObject.Book" parameterType="int">
		SELECT
			*
		FROM
			books
		WHERE
			bookcode=#{bookCode}
	</select>
	
	<!-- 하나의 대여정보 조회 -->
	<select id="selectOneRental" resultType="com.naver.blog.valueObject.Rental" parameterType="int">
		SELECT 
			rental.BOOKCODE AS bookCode,
			rental.MEMBERID AS memberId, 
			rental.RENTALSTARTDAY AS rentalStartDay, 
			rental.RETURNEXPECTDAY AS returnExpectDay,
			rental.RETURNDAY AS returnDay,
			rental.RETURNSTATUS AS returnStatus,
			payment.PAYMENTPRICE AS rentalPrice
		FROM 
			rental
		INNER JOIN
			payment
		ON
			rental.RENTALCODE = payment.RENTALCODE
		WHERE
			rental.RENTALCODE = #{rentalCode};
	</select>

	<!-- 회원가입시 도서관 목록 가져오기 -->
	<select id="selectLib" resultType="com.naver.blog.valueObject.Lib">
		SELECT
			LIBCODE,
			LIBNAME,
			LIBLOCATION
		FROM lib
	</select>
	
	<!-- 도서 반납 -->
	<update id="updateReturnBook" parameterType="String">
		UPDATE 
			rental 
		SET 
			RETURNDAY = now(),
			RETURNSTATUS='반납' 
		WHERE 
			RENTALCODE = #{rentalCode}; 
	</update>
	
	<!-- 도서 대여가능 상태 변경 + 카운터증가 -->
	<update id="updateBookStatusCount" parameterType="String">
		UPDATE 
			books  
		SET 
			CURRENTSTATUS='대여가능' ,
			RENTALCOUNT =RENTALCOUNT+1 ,
			RENTALDAYS=1 
		WHERE 
			BOOKCODE=(
				SELECT 
					rental.BOOKCODE 
				FROM 
					rental 
				WHERE 
					rental.RENTALCODE=#{rentalCode}
			); 
	</update>
	
	<!-- 대여 -->
	<insert id="insertRental" parameterType="com.naver.blog.valueObject.Rental" 
			useGeneratedKeys="true"  keyProperty="rentalCode">
		INSERT INTO
		rental (
			bookcode,
			memberid,
			rentalstartday,
			RETURNEXPECTDAY
		) 
		VALUES (
			#{bookCode},
			#{memberId},
			now(),
			#{returnExpectDay}
		); 	
	</insert>
	
	<!-- 결제 -->
	<insert id="insertPayMent" parameterType="com.naver.blog.valueObject.Rental">
		INSERT INTO 
		payment(
			RENTALCODE,
			MEMBERID,
			PAYMENTDAY,
			PAYMENTPRICE
		) 
		VALUES(
			#{rentalCode},
			#{memberId},
			now(),
			#{rentalPrice}
		); 
	
	</insert>
	
	<!-- 회원대여카운트 증가 -->
	<update id="updateMemberRentCount" parameterType="String">
		UPDATE 
			member 
		SET 
			member.RENTALCOUNT=member.RENTALCOUNT+1 
		WHERE 
			MEMBERID=#{id}; 
		
	</update>
	
	<!-- 도서대여상태 변경 -->
	<update id="updateBookStatus" parameterType="int">
		UPDATE 
			books  
		SET
			CURRENTSTATUS='대여불가능' 
		WHERE BOOKCODE=#{bookCode}; 

	</update>
	
	<!-- 도서등록 insert Book-->
 	<insert id="insertBook" parameterType="com.naver.blog.valueObject.Book">
 	INSERT INTO 
 	books (
	 	libcode,
	 	bookname,
	 	writer,
	 	publisher,
	 	category,
	 	genre,
	 	booklocation,
	 	currentstatus
 	) VALUES(
	 	#{libCode},
	 	#{bookName},
		#{writer},
	 	#{publisher},
	 	#{category},
	 	#{genre},
	 	#{bookLocation},
	 	'대여가능'
 	)
 	</insert>

</mapper>